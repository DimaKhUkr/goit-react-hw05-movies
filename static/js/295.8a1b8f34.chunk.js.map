{"version":3,"file":"static/js/295.8a1b8f34.chunk.js","mappings":"oMAGaA,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OAAOF,EAAMG,KAAI,SAAAC,GACf,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,SACGG,EAAKK,OAAQ,8BAAML,EAAKK,UAAc,wBAAKL,EAAKM,UAF5CN,EAAKE,GAMjB,GACF,C,4HCbKK,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,IAFN,kBAKoBK,MAAM,iDAAD,OACuBH,IANhD,WAKGI,EALH,QAQWC,GARX,sBASK,IAAIC,MAAM,4EATf,uBAYiBF,EAASG,OAZ1B,cAYGpB,EAZH,yBAaIA,GAbJ,kCAeHqB,EAAAA,GAAAA,MAAY,KAAMC,QAAS,CACzBC,UAAW,IACXC,iBAAiB,IAjBhB,iF,sBCmBP,EAnBa,WACX,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOzB,EAAP,KAAc0B,EAAd,KASA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGACuBf,IADvB,OACQgB,EADR,OAEEF,EAASE,EAAOC,SAFlB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,KAGD,6BACE,oCACC9B,IAAS,SAAC,IAAD,CAAUA,MAAOA,MAGhC,C,sBCpBD,SAAS+B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/FilmsList.jsx","Fetch/fetchPopular.js","pages/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const FilmList = ({ films }) => {\n  const location = useLocation();\n\n  return films.map(film => {\n    return (\n      <ul key={film.id}>\n        <Link to={`/movies/${film.id}`} state={{ from: location }}>\n          {film.title ? <li> {film.title}</li> : <li>{film.name}</li>}\n        </Link>\n      </ul>\n    );\n  });\n};\n\nFilmList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import { toast } from 'react-toastify';\n\nconst API_KEY = 'edf9b0cc9ad38910cb90dc25085b494b';\n\nexport async function fetchpopular() {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/all/day?${searchParams}`\n    );\n    if (!response.ok) {\n      throw new Error('Какая то беда 404');\n    }\n\n    const films = await response.json();\n    return films;\n  } catch (error) {\n    toast.error(error.message, {\n      autoClose: 3000,\n      hideProgressBar: true,\n    });\n  }\n}\n","import { FilmList } from 'components/FilmsList';\nimport { fetchpopular } from '../Fetch/fetchPopular.js';\nimport { useState, useEffect } from 'react';\n\nconst Home = () => {\n  const [films, setFilms] = useState('');\n  useEffect(() => {\n    async function extractFetch() {\n      const movies = await fetchpopular();\n      setFilms(movies.results);\n    }\n    extractFetch();\n  }, []);\n\n  return (\n    <main>\n      <h1>Welcome</h1>\n      {films && <FilmList films={films} />}\n    </main>\n  );\n};\n\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["FilmList","films","location","useLocation","map","film","to","id","state","from","title","name","API_KEY","fetchpopular","searchParams","URLSearchParams","api_key","fetch","response","ok","Error","json","toast","message","autoClose","hideProgressBar","useState","setFilms","useEffect","movies","results","extractFetch","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}